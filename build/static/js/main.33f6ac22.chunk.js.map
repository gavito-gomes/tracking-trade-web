{"version":3,"sources":["styles/constants.ts","components/Sidebar.tsx","styles/global.tsx","components/Card.tsx","data/index.ts","components/charts/PizzaChart.tsx","components/charts/Subtitles.tsx","features/ControlPanel/ContextProvider.tsx","features/ControlPanel/components/ActionPlanns.tsx","components/Select.tsx","features/ControlPanel/components/ActionPlannsUpdate.tsx","components/charts/BarChart.tsx","features/ControlPanel/components/EventHistory.tsx","features/ControlPanel/components/GeneralActionPlanns.tsx","features/ControlPanel/components/Inspections.tsx","features/ControlPanel/components/ScheduledInspections.tsx","features/ControlPanel/View.tsx","features/ControlPanel/Index.tsx","App.tsx","index.tsx"],"names":["screen","colors","Sidebar","options","active","setActive","toggleActive","Container","Bar","Burguer","onClick","size","Menu","CloseMenu","map","item","i","Item","href","path","icon","label","styled","div","button","a","createGlobalStyle","Page","Card","children","CardContainer","CardTitle","h3","CardSubtitle","h4","PizzaChart","arrayData","chartSize","useState","chartDashes","setchartDashes","useEffect","accOffset","dashes","dasharray","value","Math","PI","dash","offset","color","viewBox","width","height","transform","r","cx","cy","stroke","strokeWidth","strokeDasharray","strokeDashoffset","fill","Subtitle","SubtitlesCircle","props","SubtitlesLabel","faker","require","scheduledInspections","date","Date","now","planned","floor","random","push","name","findName","completed","lastUpdate","toLocaleString","eventHistory","Array","valueX","getDate","getMonth","slice","bars","barTypeId","valueY","round","actionPlannsUpdates","status","actionName","responsible","data","barTypes","id","inspections","inspectionsAverageTime","generalActionPlanns","actionPlanns","actionPlannsAverageTime","ControlPanelContext","createContext","ControlPanelContextProvider","Provider","ActionPlanns","useContext","chartData","setchartData","reduce","acc","prev","totalValue","Header","Title","Settings","ChartWrapper","InfoSection","Subtitles","Number","toFixed","TimeInfo","TimeAverage","TimeLabel","TimeValue","Select","onSelect","SelectInput","defaultValue","onChange","event","target","SelectOption","disabled","SelectArrow","select","span","option","ActionPlannsUpdate","statusFilter","setstatusFilter","searchText","setsearchText","Search","placeholder","style","marginBottom","ActionsList","filter","args","length","text","shift","result","forEach","arg","toLowerCase","indexOf","seacrhIn","ActionPlann","ActionInfo","StatusBadge","input","BarChart","maxValueY","bar","flat","sort","b","barColor","barType","viewScroll","setviewScroll","onMouseEnter","onMouseLeave","BarGroup","Bars","j","BarValueLabel","BarValue","background","LabelX","EventHistory","Filter","Chart","ChartSubtitle","BarType","GeneralActionPlanns","Inspections","ScheduledInspections","TableWrapper","InspectionTable","Inspection","table","tr","ControlPanel","EventHistoryWrapper","GeneralActionsWrapper","InspectionsWrapper","ActionPlannsWrapper","ActionPlannsUpdateWrapper","ScheduledInspectionsWrapper","h1","App","menuOptions","BiBarChartSquare","sidebarActive","setsidebarActive","AppContainer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33f6ac22.chunk.js","sourcesContent":["export const screen = {\r\n  sm: 'min-width: 576px',\r\n  md: 'min-width: 768px',\r\n  lg: 'min-width: 1024px',\r\n  xl: 'min-width: 1440px',\r\n}\r\n\r\nexport const colors = {\r\n  white: '#FAFAFA',\r\n  light: '#EBEBEB',\r\n  gray: '#C4C4C4',\r\n  darkgray: '#B0B0B0',\r\n  dark: '#333333',\r\n  lightgray: '#BDBDBD',\r\n  primary: '#0794B2',\r\n\r\n  gradient1: '#0DB2D6',\r\n  gradient2: '#4FDA91',\r\n\r\n  blue: '#4B9EEA',\r\n  red: '#C00808',\r\n  lilac: '#A91B79',\r\n  green: '#7FC008',\r\n  orange: '#DB8C28',\r\n  pink: '#EB5757',\r\n}\r\n","import React from 'react'\r\nimport { IconType } from 'react-icons/lib'\r\nimport styled from 'styled-components'\r\nimport { colors, screen } from '../styles/constants'\r\nimport { FaBars, FaAngleLeft } from 'react-icons/fa'\r\n\r\nexport type SidebarProps = {\r\n  options: Array<SidebarItemProps>\r\n  active: boolean\r\n  setActive: (active: boolean) => void\r\n}\r\n\r\nexport type SidebarItemProps = {\r\n  label: string\r\n  path: string\r\n  icon: IconType\r\n}\r\n\r\nconst Sidebar: React.FC<SidebarProps> = ({ options, active, setActive }) => {\r\n  const toggleActive = () => setActive(!active)\r\n\r\n  return (\r\n    <Container>\r\n      <Bar>\r\n        <Burguer onClick={toggleActive}>\r\n          <FaBars size={18} />\r\n        </Burguer>\r\n      </Bar>\r\n\r\n      {active && (\r\n        <Menu>\r\n          <CloseMenu onClick={toggleActive}>\r\n            <FaAngleLeft />\r\n          </CloseMenu>\r\n\r\n          {options.map((item, i) => (\r\n            <Item href={item.path} key={i}>\r\n              {item.icon({ size: 25 })}\r\n              {item.label}\r\n            </Item>\r\n          ))}\r\n        </Menu>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n\r\nconst Container = styled.div`\r\n  background: ${colors.white};\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  z-index: 2;\r\n\r\n  @media (${screen.md}) {\r\n    width: fit-content;\r\n    height: 100%;\r\n    display: flex;\r\n  }\r\n`\r\n\r\nconst Bar = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  background: ${colors.gradient1};\r\n\r\n  @media (${screen.md}) {\r\n    width: 40px;\r\n    height: 100%;\r\n    background: linear-gradient(\r\n      180deg,\r\n      ${colors.gradient1},\r\n      ${colors.gradient2}\r\n    );\r\n  }\r\n`\r\nconst Burguer = styled.button`\r\n  height: 40px;\r\n  width: 40px;\r\n  background: transparent;\r\n  color: ${colors.white};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media (${screen.md}) {\r\n    margin-top: 40px;\r\n    background: ${colors.white};\r\n    color: ${colors.dark};\r\n    border-radius: 50px;\r\n  }\r\n`\r\n\r\nconst Menu = styled.div`\r\n  width: 250px;\r\n  padding: 10px 0;\r\n  border: 0px solid ${colors.lightgray};\r\n  border-bottom-width: 1px;\r\n  @media (${screen.md}) {\r\n    border-width: 0;\r\n    border-right-width: 1px;\r\n  }\r\n`\r\n\r\nconst CloseMenu = styled.button`\r\n  background: ${colors.primary};\r\n  color: ${colors.light};\r\n  border-radius: 50%;\r\n  width: 20px;\r\n  height: 20px;\r\n  display: none;\r\n\r\n  @media (${screen.md}) {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 40px 0 20px;\r\n    position: relative;\r\n    left: calc(100% - 10px);\r\n  }\r\n`\r\n\r\nconst Item = styled.a`\r\n  text-decoration: none;\r\n  padding: 10px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  color: ${colors.primary};\r\n\r\n  &:hover {\r\n    background: ${colors.light};\r\n  }\r\n`\r\n","import styled, { createGlobalStyle } from 'styled-components'\r\nimport { colors } from './constants'\r\n\r\nexport default createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    border: 0;\r\n    box-sizing: border-box;\r\n    font-family: 'Poppins', serif !important;\r\n  }\r\n  \r\n  html, body, #root {\r\n    font-size: 14px;\r\n    height: 100%;\r\n    background: ${colors.white};\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: antialiased;\r\n  }\r\n\r\n  button {\r\n    :hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`\r\n\r\nexport const Page = styled.div`\r\n  height: 100%;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { colors } from '../styles/constants'\r\n\r\ntype CardProps = {}\r\n\r\nconst Card: React.FC<CardProps> = ({ children }) => {\r\n  return <CardContainer>{children}</CardContainer>\r\n}\r\n\r\nexport default Card\r\n\r\nconst CardContainer = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  border-radius: 5px;\r\n  border: 1px solid ${colors.gray};\r\n  padding: 15px;\r\n`\r\n\r\nexport const CardTitle = styled.h3`\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n`\r\nexport const CardSubtitle = styled.h4`\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  color: ${colors.dark};\r\n`\r\n","import { BarValueType } from '../components/charts/BarChart'\r\nimport { colors } from '../styles/constants'\r\n\r\nconst faker = require('faker-br')\r\n\r\nlet scheduledInspections = []\r\n\r\nfor (let i = 0; i < 10; i++) {\r\n  let date = new Date(Date.now() - 24 * 3600 * 1000 * i)\r\n  let planned = Math.floor(Math.random() * 19 + 10)\r\n  scheduledInspections.push({\r\n    name: faker.name.findName(),\r\n    planned,\r\n    completed: Math.floor(Math.random() * (planned - 1) + 1),\r\n    lastUpdate: date.toLocaleString(),\r\n  })\r\n}\r\n\r\nlet eventHistory = Array<BarValueType<string, number>>()\r\n\r\nfor (let i = 0; i < 10; i++) {\r\n  let date = new Date(Date.now() - 24 * 3600 * 1000 * i)\r\n  eventHistory.push({\r\n    valueX: `${date.getDate()}/${('00' + date.getMonth()).slice(-2)}`,\r\n    bars: [\r\n      {\r\n        barTypeId: 0,\r\n        valueY: Math.round(Math.random() * 19 + 1),\r\n      },\r\n      {\r\n        barTypeId: 1,\r\n        valueY: Math.round(Math.random() * 19 + 1),\r\n      },\r\n      {\r\n        barTypeId: 2,\r\n        valueY: Math.round(Math.random() * 19 + 1),\r\n      },\r\n    ],\r\n  })\r\n}\r\n\r\nlet actionPlannsUpdates = []\r\n\r\nlet status = [\r\n  { value: 0, label: 'Realizado', color: colors.green },\r\n  { value: 1, label: 'Pendente', color: colors.orange },\r\n  { value: 2, label: 'Não realizado', color: colors.red },\r\n]\r\n\r\nfor (let i = 10; i > 0; i--) {\r\n  let date = new Date(Date.now() - 24 * 3600 * 1000 * (10 - i))\r\n  actionPlannsUpdates.push({\r\n    actionName: `Plano de ação ${i}`,\r\n    responsible: faker.name.findName(),\r\n    lastUpdate: date.toLocaleString(),\r\n    status: status[Math.round(Math.random() * 2)],\r\n  })\r\n}\r\n\r\nconst data = {\r\n  scheduledInspections,\r\n  eventHistory: {\r\n    barTypes: [\r\n      { id: 0, label: 'Label 1', color: colors.blue },\r\n      { id: 1, label: 'Label 2', color: colors.red },\r\n      { id: 2, label: 'Label 3', color: colors.lilac },\r\n    ],\r\n    arrayData: eventHistory,\r\n  },\r\n  inspections: [\r\n    { value: 23, label: 'Realizadas', color: colors.green },\r\n    { value: 14, label: 'Em aberto', color: colors.orange },\r\n    { value: 4, label: 'Não realizadas', color: colors.red },\r\n  ],\r\n  inspectionsAverageTime: [\r\n    { label: 'Hoje', value: '9 min' },\r\n    { label: 'Últimos 7 dias', value: '10 min' },\r\n    { label: 'Últimos 30 dias', value: '12 min' },\r\n  ],\r\n  generalActionPlanns: [\r\n    { value: 43, label: 'Realizadas', color: colors.green },\r\n    { value: 12, label: 'Em aberto', color: colors.orange },\r\n    { value: 10, label: 'Não realizadas', color: colors.red },\r\n  ],\r\n  actionPlanns: [\r\n    { value: 10, label: 'Realizadas', color: colors.green },\r\n    { value: 11, label: 'Em aberto', color: colors.orange },\r\n    { value: 5, label: 'Não realizadas', color: colors.red },\r\n  ],\r\n  actionPlannsAverageTime: [\r\n    { label: 'Hoje', value: '8 min' },\r\n    { label: 'Últimos 7 dias', value: '11 min' },\r\n    { label: 'Últimos 30 dias', value: '10 min' },\r\n  ],\r\n  actionPlannsUpdates,\r\n}\r\n\r\nexport default data\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport type PizzaValueType = {\r\n  value: number\r\n  label: string\r\n  color?: string\r\n}\r\n\r\ntype PizzaChartProps = {\r\n  arrayData: Array<PizzaValueType>\r\n  chartSize?: number\r\n}\r\n\r\ntype ChartDash = {\r\n  offset: number\r\n  dasharray: number\r\n  color?: string\r\n}\r\n\r\nfunction PizzaChart({\r\n  arrayData,\r\n  chartSize = 100,\r\n}: PizzaChartProps): JSX.Element {\r\n  const [chartDashes, setchartDashes] = useState<Array<ChartDash>>([])\r\n\r\n  useEffect(() => {\r\n    if (!arrayData) return\r\n    let accOffset = 0\r\n    let dashes = arrayData.map((item, i) => {\r\n      let dasharray = item.value * 2 * Math.PI\r\n      let dash = {\r\n        dasharray,\r\n        offset: accOffset,\r\n        color: item.color,\r\n      }\r\n      accOffset += dasharray\r\n      return dash\r\n    })\r\n\r\n    setchartDashes(dashes)\r\n  }, [arrayData])\r\n\r\n  return (\r\n    <Container>\r\n      <svg\r\n        viewBox='0 0 100 100'\r\n        width={chartSize}\r\n        height={chartSize}\r\n        transform='rotate(-90)'\r\n      >\r\n        {chartDashes.map((dash, i) => {\r\n          return (\r\n            <circle\r\n              key={i}\r\n              r={45}\r\n              cx={50}\r\n              cy={50}\r\n              stroke={dash.color}\r\n              strokeWidth={8}\r\n              strokeDasharray={`${dash.dasharray * 45} 1000`}\r\n              strokeDashoffset={-dash.offset * 45}\r\n              fill='transparent'\r\n            />\r\n          )\r\n        })}\r\n      </svg>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default PizzaChart\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n`\r\n","import styled from 'styled-components'\r\nimport { screen } from '../../styles/constants'\r\n\r\nexport const Subtitle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-bottom: 5px;\r\n`\r\n\r\nexport const SubtitlesCircle = styled('div')<{ color?: string }>`\r\n  border: 3px solid ${(props) => props.color};\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 50%;\r\n`\r\nexport const SubtitlesLabel = styled.div`\r\n  font-size: 12px;\r\n\r\n  @media (${screen.lg}) {\r\n    font-size: 10px;\r\n  }\r\n  @media (${screen.lg}) {\r\n    font-size: 11px;\r\n  }\r\n`\r\n","import React, { createContext, useState } from 'react'\r\nimport { BarType, BarValueType } from '../../components/charts/BarChart'\r\nimport { PizzaValueType } from '../../components/charts/PizzaChart'\r\nimport data from '../../data/index'\r\n\r\ntype ControlPanelData = {\r\n  scheduledInspections: Array<{\r\n    name: string\r\n    planned: number\r\n    completed: number\r\n    lastUpdate: string\r\n  }>\r\n  eventHistory: {\r\n    arrayData: Array<BarValueType<string, number>>\r\n    barTypes: Array<BarType>\r\n  }\r\n  inspections: Array<PizzaValueType>\r\n  inspectionsAverageTime: Array<{\r\n    label: string\r\n    value: string\r\n  }>\r\n  generalActionPlanns: Array<PizzaValueType>\r\n  actionPlanns: Array<PizzaValueType>\r\n  actionPlannsAverageTime: Array<{\r\n    label: string\r\n    value: string\r\n  }>\r\n  actionPlannsUpdates: Array<{\r\n    actionName: string\r\n    responsible: string\r\n    lastUpdate: string\r\n    status: {\r\n      value: number\r\n      label: string\r\n      color?: string\r\n    }\r\n  }>\r\n}\r\n\r\nexport const ControlPanelContext = createContext<ControlPanelData>({\r\n  scheduledInspections: [],\r\n  eventHistory: {\r\n    arrayData: [],\r\n    barTypes: [],\r\n  },\r\n  inspections: [],\r\n  inspectionsAverageTime: [],\r\n  generalActionPlanns: [],\r\n  actionPlanns: [],\r\n  actionPlannsAverageTime: [],\r\n  actionPlannsUpdates: [],\r\n})\r\n\r\ntype ProviderProps = {\r\n  children?: React.ReactNode\r\n}\r\n\r\nexport default function ControlPanelContextProvider({\r\n  children,\r\n}: ProviderProps): JSX.Element {\r\n  const [scheduledInspections] = useState(data.scheduledInspections)\r\n  const [eventHistory] = useState(data.eventHistory)\r\n  const [inspections] = useState(data.inspections)\r\n  const [inspectionsAverageTime] = useState(data.inspectionsAverageTime)\r\n  const [generalActionPlanns] = useState(data.generalActionPlanns)\r\n  const [actionPlanns] = useState(data.actionPlanns)\r\n  const [actionPlannsAverageTime] = useState(data.actionPlannsAverageTime)\r\n  const [actionPlannsUpdates] = useState(data.actionPlannsUpdates)\r\n\r\n  return (\r\n    <ControlPanelContext.Provider\r\n      value={{\r\n        scheduledInspections,\r\n        eventHistory,\r\n        inspections,\r\n        inspectionsAverageTime,\r\n        generalActionPlanns,\r\n        actionPlanns,\r\n        actionPlannsAverageTime,\r\n        actionPlannsUpdates,\r\n      }}\r\n    >\r\n      {children}\r\n    </ControlPanelContext.Provider>\r\n  )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { FaCog } from 'react-icons/fa'\r\nimport styled from 'styled-components'\r\nimport Card, { CardSubtitle, CardTitle } from '../../../components/Card'\r\nimport PizzaChart, {\r\n  PizzaValueType,\r\n} from '../../../components/charts/PizzaChart'\r\nimport {\r\n  Subtitle,\r\n  SubtitlesCircle,\r\n  SubtitlesLabel,\r\n} from '../../../components/charts/Subtitles'\r\nimport { screen } from '../../../styles/constants'\r\nimport { ControlPanelContext } from '../ContextProvider'\r\n\r\nconst ActionPlanns: React.FC = () => {\r\n  const { actionPlanns, actionPlannsAverageTime } =\r\n    useContext(ControlPanelContext)\r\n\r\n  const [chartData, setchartData] = useState<Array<PizzaValueType>>([])\r\n  const [totalValue] = useState(\r\n    actionPlanns.map((item) => item.value).reduce((acc, prev) => acc + prev, 0)\r\n  )\r\n\r\n  useEffect(() => {\r\n    let data: Array<PizzaValueType> = actionPlanns.map((item) => {\r\n      return {\r\n        label: item.label,\r\n        value: item.value / totalValue,\r\n        color: item.color,\r\n      }\r\n    })\r\n    setchartData(data)\r\n  }, [actionPlanns, totalValue])\r\n\r\n  return (\r\n    <Container>\r\n      <Card>\r\n        <Header>\r\n          <Title>\r\n            <CardTitle>Planos de ação</CardTitle>\r\n            <CardSubtitle>Status do dia</CardSubtitle>\r\n          </Title>\r\n          <Settings>\r\n            <FaCog size={20} />\r\n          </Settings>\r\n        </Header>\r\n        <ChartWrapper>\r\n          <PizzaChart arrayData={chartData} chartSize={100} />\r\n        </ChartWrapper>\r\n        <InfoSection>\r\n          <Subtitles>\r\n            {actionPlanns.map((item, i) => (\r\n              <Subtitle key={i}>\r\n                <SubtitlesCircle color={item.color}></SubtitlesCircle>\r\n                <SubtitlesLabel>\r\n                  {item.label} -{' '}\r\n                  {Number((item.value / totalValue) * 100).toFixed(1)}%\r\n                </SubtitlesLabel>\r\n              </Subtitle>\r\n            ))}\r\n          </Subtitles>\r\n          <TimeInfo>\r\n            <CardSubtitle>Média de tempo</CardSubtitle>\r\n            <TimeAverage>\r\n              {actionPlannsAverageTime.map((item, i) => (\r\n                <>\r\n                  <TimeLabel>{item.label}</TimeLabel>\r\n                  <TimeValue>{item.value}</TimeValue>\r\n                </>\r\n              ))}\r\n            </TimeAverage>\r\n          </TimeInfo>\r\n        </InfoSection>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ActionPlanns\r\n\r\nconst Container = styled.div``\r\nconst ChartWrapper = styled.div`\r\n  padding: 10px;\r\n  text-align: center;\r\n`\r\n\r\nconst Header = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto 30px;\r\n  grid-template-rows: auto auto;\r\n  gap: 10px;\r\n`\r\nconst Title = styled.div`\r\n  grid-column: 1 / 2;\r\n`\r\nconst Settings = styled.button`\r\n  width: fit-content;\r\n  grid-column: 2 / 3;\r\n  background: transparent;\r\n  justify-self: flex-end;\r\n`\r\n\r\nconst InfoSection = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 50% 50%;\r\n  align-items: flex-end;\r\n`\r\nconst Subtitles = styled.div``\r\n\r\nconst TimeInfo = styled.div`\r\n  justify-self: flex-end;\r\n`\r\n\r\nconst TimeAverage = styled.div`\r\n  margin-top: 5px;\r\n  display: grid;\r\n  grid-template-columns: fit-content(200px) auto;\r\n`\r\n\r\nconst TimeLabel = styled(SubtitlesLabel)`\r\n  grid-column: 1;\r\n  padding-right: 10px;\r\n  margin-bottom: 5px;\r\n\r\n  @media (${screen.sm}) {\r\n  }\r\n  @media (${screen.lg}) {\r\n    font-size: 10px;\r\n  }\r\n`\r\nconst TimeValue = styled(SubtitlesLabel)`\r\n  grid-column: 2;\r\n  @media (${screen.lg}) {\r\n    font-size: 10px;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { colors } from '../styles/constants'\r\nimport { FaAngleDown } from 'react-icons/fa'\r\n\r\ntype SelectProps = {\r\n  options: Array<{\r\n    label: string\r\n    value?: number | string\r\n  }>\r\n  value?: number | string\r\n  onSelect?: (valueSelected: number) => void\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({\r\n  options,\r\n  value,\r\n  onSelect = () => {},\r\n}) => {\r\n  const handleChange: React.ChangeEventHandler = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    onSelect(Number(event.target.value))\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <SelectInput defaultValue={value} onChange={handleChange}>\r\n        <SelectOption disabled>Selecione uma opção...</SelectOption>\r\n        {options.map((item, i) => (\r\n          <SelectOption key={i} value={item.value}>\r\n            {item.label}\r\n          </SelectOption>\r\n        ))}\r\n      </SelectInput>\r\n\r\n      <SelectArrow>\r\n        <FaAngleDown />\r\n      </SelectArrow>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Select\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n`\r\n\r\nconst SelectInput = styled.select`\r\n  width: 100%;\r\n  background: ${colors.gray};\r\n  padding: 6px 15px;\r\n  border-radius: 50px;\r\n  font-weight: 600;\r\n  font-size: 14px;\r\n\r\n  -webkit-appearance: none; /* Remove estilo padrão do Chrome */\r\n  -moz-appearance: none; /* Remove estilo padrão do FireFox */\r\n  appearance: none; /* Remove estilo padrão do FireFox*/\r\n`\r\nconst SelectArrow = styled.span`\r\n  color: ${colors.dark};\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 5px;\r\n`\r\n\r\nconst SelectOption = styled.option`\r\n  background: ${colors.white};\r\n`\r\n","import React, {\r\n  ChangeEvent,\r\n  ChangeEventHandler,\r\n  useContext,\r\n  useState,\r\n} from 'react'\r\nimport { FaCog } from 'react-icons/fa'\r\nimport styled from 'styled-components'\r\nimport Card, { CardSubtitle, CardTitle } from '../../../components/Card'\r\nimport Select from '../../../components/Select'\r\nimport { colors } from '../../../styles/constants'\r\nimport { ControlPanelContext } from '../ContextProvider'\r\n\r\nconst ActionPlannsUpdate: React.FC = () => {\r\n  const { actionPlannsUpdates } = useContext(ControlPanelContext)\r\n\r\n  const availableStatus = [\r\n    { value: -1, label: 'Todas' },\r\n    { value: 0, label: 'Realizado' },\r\n    { value: 1, label: 'Pendente' },\r\n    { value: 2, label: 'Não realizado' },\r\n  ]\r\n\r\n  const [statusFilter, setstatusFilter] = useState(1)\r\n  const [searchText, setsearchText] = useState('')\r\n\r\n  const seacrhIn = (...args: string[]) => {\r\n    if (args.length <= 0) return\r\n    let text = args.shift() || ''\r\n    let result = false\r\n    args.forEach((arg: string) => {\r\n      if (arg.toLowerCase().indexOf(text.toLowerCase()) >= 0) result = true\r\n    })\r\n    return result\r\n  }\r\n\r\n  const handleSearch: ChangeEventHandler = (\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setsearchText(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Card>\r\n        <Header>\r\n          <Title>\r\n            <CardTitle>Planos de ação</CardTitle>\r\n            <CardSubtitle>Atualizações</CardSubtitle>\r\n          </Title>\r\n          <Settings>\r\n            <FaCog size={20} />\r\n          </Settings>\r\n        </Header>\r\n        <Search\r\n          placeholder='Pesquisar'\r\n          style={{ marginBottom: 10 }}\r\n          onChange={handleSearch}\r\n        />\r\n        <Select\r\n          options={availableStatus}\r\n          value={statusFilter}\r\n          onSelect={setstatusFilter}\r\n        />\r\n        <ActionsList>\r\n          {actionPlannsUpdates\r\n            .filter(\r\n              (item) =>\r\n                statusFilter === -1 || item.status.value === statusFilter\r\n            )\r\n            .filter((item) =>\r\n              seacrhIn(searchText, item.actionName, item.responsible)\r\n            )\r\n            .map((item, i) => (\r\n              <ActionPlann key={i}>\r\n                <div>\r\n                  <p>{item.actionName}</p>\r\n                  <p>Responsável: {item.responsible}</p>\r\n                </div>\r\n                <ActionInfo>\r\n                  <StatusBadge color={item.status.color}>\r\n                    {item.status.label}\r\n                  </StatusBadge>\r\n                  <p>{item.lastUpdate}</p>\r\n                </ActionInfo>\r\n              </ActionPlann>\r\n            ))}\r\n        </ActionsList>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ActionPlannsUpdate\r\n\r\nconst Container = styled.div``\r\n\r\nconst Header = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto 30px;\r\n  grid-template-rows: auto auto;\r\n  gap: 10px;\r\n`\r\n\r\nconst Title = styled.div`\r\n  grid-column: 1 / 2;\r\n`\r\nconst Settings = styled.button`\r\n  width: fit-content;\r\n  grid-column: 2 / 3;\r\n  background: transparent;\r\n  justify-self: flex-end;\r\n`\r\n\r\nconst Search = styled.input`\r\n  border-radius: 100px;\r\n  border: 1px solid ${colors.gray};\r\n  width: 100%;\r\n  padding: 5px 10px;\r\n`\r\n\r\nconst ActionsList = styled.div`\r\n  margin-top: 10px;\r\n`\r\n\r\nconst ActionPlann = styled.div`\r\n  font-size: 12px;\r\n  border-top: 1px solid ${colors.gray};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  padding: 12px 0;\r\n`\r\nconst ActionInfo = styled.div`\r\n  text-align: right;\r\n`\r\n\r\nconst StatusBadge = styled('label')<{ color?: string }>`\r\n  color: ${(props) => props.color};\r\n  font-size: 11px;\r\n  padding: 0 8px;\r\n  border-radius: 50px;\r\n  border: 1px solid ${(props) => props.color};\r\n  width: fit-content;\r\n  height: fit-content;\r\n  display: inline-block;\r\n  margin-bottom: 2px;\r\n`\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { colors } from '../../styles/constants'\r\n\r\nexport type BarType = {\r\n  id: number\r\n  label: string\r\n  color?: string\r\n}\r\n\r\ntype BarChartProps<X, Y> = {\r\n  barTypes: Array<BarType>\r\n  arrayData?: Array<BarValueType<X, Y>>\r\n}\r\n\r\nexport type BarValueType<X, Y> = {\r\n  valueX: X\r\n  bars: Array<{\r\n    barTypeId: number\r\n    valueY: Y\r\n  }>\r\n}\r\n\r\nfunction BarChart<X, Y>({\r\n  barTypes,\r\n  arrayData,\r\n}: BarChartProps<X, Y>): JSX.Element {\r\n  const maxValueY = arrayData\r\n    ?.map((item) => item.bars.map((bar) => bar.valueY))\r\n    .flat()\r\n    .sort((a, b) => Number(b) - Number(a))\r\n    .shift()\r\n\r\n  const barColor = (id: number) => {\r\n    let barType = barTypes.filter((item) => item.id === id).shift()\r\n    return barType ? barType.color : colors.gray\r\n  }\r\n\r\n  const [viewScroll, setviewScroll] = useState(false)\r\n\r\n  return (\r\n    <Container\r\n      onMouseEnter={() => setviewScroll(true)}\r\n      onMouseLeave={() => setviewScroll(false)}\r\n      viewScroll={viewScroll}\r\n    >\r\n      {arrayData?.map((item, i) => {\r\n        return (\r\n          <BarGroup key={i}>\r\n            <Bars>\r\n              {item.bars.map((bar, j) => (\r\n                <Bar key={j}>\r\n                  <BarValueLabel>\r\n                    {Number(bar.valueY) > 0 ? bar.valueY : ''}\r\n                  </BarValueLabel>\r\n                  <BarValue\r\n                    background={barColor(bar.barTypeId)}\r\n                    height={`${\r\n                      (Number(bar.valueY) / Number(maxValueY)) * 100\r\n                    }%`}\r\n                  />\r\n                </Bar>\r\n              ))}\r\n            </Bars>\r\n            <LabelX>{item.valueX}</LabelX>\r\n          </BarGroup>\r\n        )\r\n      })}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default BarChart\r\n\r\nconst Container = styled('div')<{ viewScroll?: boolean }>`\r\n  height: 160px;\r\n  display: flex;\r\n  overflow-x: auto;\r\n  padding-bottom: 10px;\r\n  ::-webkit-scrollbar {\r\n    height: 4px;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    background: ${(props) => (props.viewScroll ? colors.light : 'transparent')};\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background: ${(props) =>\r\n      props.viewScroll ? colors.darkgray : 'transparent'};\r\n  }\r\n`\r\n\r\nconst BarGroup = styled.div`\r\n  height: 100%;\r\n  flex: 0 0 70px;\r\n  align-self: flex-end;\r\n  text-align: center;\r\n  margin: 0 3px;\r\n  display: grid;\r\n  grid-template-rows: auto 20px;\r\n`\r\n\r\nconst Bars = styled.div`\r\n  padding: 10px 20px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  gap: 5px;\r\n`\r\n\r\nconst LabelX = styled.label`\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n`\r\nconst Bar = styled.div`\r\n  height: 100%;\r\n  width: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n`\r\nconst BarValue = styled('div')<{\r\n  background?: string\r\n  height?: number | string\r\n}>`\r\n  background: ${(props) => props.background};\r\n  height: ${(props) => props.height};\r\n  width: 100%;\r\n`\r\nconst BarValueLabel = styled.div`\r\n  font-size: 10px;\r\n`\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport Card, { CardTitle } from '../../../components/Card'\r\nimport Select from '../../../components/Select'\r\nimport { screen } from '../../../styles/constants'\r\nimport { FaCog } from 'react-icons/fa'\r\nimport { ControlPanelContext } from '../ContextProvider'\r\nimport BarChart from '../../../components/charts/BarChart'\r\nimport {\r\n  SubtitlesCircle,\r\n  SubtitlesLabel,\r\n} from '../../../components/charts/Subtitles'\r\n\r\nconst EventHistory: React.FC = () => {\r\n  const { eventHistory } = useContext(ControlPanelContext)\r\n\r\n  return (\r\n    <Container>\r\n      <Card>\r\n        <Header>\r\n          <Title>\r\n            <CardTitle>Histórico de eventos</CardTitle>\r\n          </Title>\r\n          <Filter>\r\n            <Select options={[{ label: 'Diário' }]} />\r\n          </Filter>\r\n          <Settings>\r\n            <FaCog size={20} />\r\n          </Settings>\r\n        </Header>\r\n\r\n        <Chart>\r\n          <BarChart\r\n            barTypes={eventHistory.barTypes}\r\n            arrayData={eventHistory.arrayData}\r\n          />\r\n        </Chart>\r\n\r\n        <ChartSubtitle>\r\n          {eventHistory.barTypes.map((item, i) => (\r\n            <BarType key={i}>\r\n              <SubtitlesCircle color={item.color} />\r\n              <SubtitlesLabel>{item.label}</SubtitlesLabel>\r\n            </BarType>\r\n          ))}\r\n        </ChartSubtitle>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default EventHistory\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst Header = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto 30px;\r\n  grid-template-rows: auto auto;\r\n  gap: 10px;\r\n\r\n  @media (${screen.md}) {\r\n    grid-template-columns: auto 300px 30px;\r\n  }\r\n`\r\n\r\nconst Title = styled.div`\r\n  grid-column: 1 / 2;\r\n`\r\n\r\nconst Filter = styled.div`\r\n  grid-row: 2 / 3;\r\n  grid-column: 1 / 3;\r\n\r\n  @media (${screen.md}) {\r\n    grid-row: 1 / 2;\r\n    grid-column: 2 / 3;\r\n  }\r\n`\r\n\r\nconst Settings = styled.button`\r\n  width: fit-content;\r\n  grid-column: 2 / 3;\r\n  background: transparent;\r\n  justify-self: flex-end;\r\n\r\n  @media (${screen.md}) {\r\n    grid-column: 3 / 4;\r\n  }\r\n`\r\n\r\nconst Chart = styled.div`\r\n  max-width: 100%;\r\n  overflow-x: hidden;\r\n  margin-top: 10px;\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\nconst ChartSubtitle = styled.div`\r\n  margin-top: 10px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  row-gap: 10px;\r\n  column-gap: 20px;\r\n`\r\n\r\nconst BarType = styled.div`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n`\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { FaCog } from 'react-icons/fa'\r\nimport styled from 'styled-components'\r\nimport Card, { CardSubtitle, CardTitle } from '../../../components/Card'\r\nimport PizzaChart, {\r\n  PizzaValueType,\r\n} from '../../../components/charts/PizzaChart'\r\nimport {\r\n  Subtitle,\r\n  SubtitlesCircle,\r\n  SubtitlesLabel,\r\n} from '../../../components/charts/Subtitles'\r\nimport { ControlPanelContext } from '../ContextProvider'\r\n\r\nconst GeneralActionPlanns: React.FC = () => {\r\n  const { generalActionPlanns } = useContext(ControlPanelContext)\r\n\r\n  const [chartData, setchartData] = useState<Array<PizzaValueType>>([])\r\n  const [totalValue] = useState(\r\n    generalActionPlanns\r\n      .map((item) => item.value)\r\n      .reduce((acc, prev) => acc + prev, 0)\r\n  )\r\n\r\n  useEffect(() => {\r\n    let data: Array<PizzaValueType> = generalActionPlanns.map((item) => {\r\n      return {\r\n        label: item.label,\r\n        value: item.value / totalValue,\r\n        color: item.color,\r\n      }\r\n    })\r\n    setchartData(data)\r\n  }, [generalActionPlanns, totalValue])\r\n\r\n  return (\r\n    <Container>\r\n      <Card>\r\n        <Header>\r\n          <Title>\r\n            <CardTitle>Planos de ação</CardTitle>\r\n            <CardSubtitle>Status geral</CardSubtitle>\r\n          </Title>\r\n          <Settings>\r\n            <FaCog size={20} />\r\n          </Settings>\r\n        </Header>\r\n        <ChartWrapper>\r\n          <PizzaChart arrayData={chartData} chartSize={100} />\r\n        </ChartWrapper>\r\n        <InfoSection>\r\n          <Subtitles>\r\n            {generalActionPlanns.map((item, i) => (\r\n              <Subtitle key={i}>\r\n                <SubtitlesCircle color={item.color}></SubtitlesCircle>\r\n                <SubtitlesLabel>\r\n                  {item.label} -{' '}\r\n                  {Number((item.value / totalValue) * 100).toFixed(1)}%\r\n                </SubtitlesLabel>\r\n              </Subtitle>\r\n            ))}\r\n          </Subtitles>\r\n        </InfoSection>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default GeneralActionPlanns\r\n\r\nconst Container = styled.div``\r\nconst ChartWrapper = styled.div`\r\n  padding: 10px;\r\n  text-align: center;\r\n`\r\n\r\nconst Header = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto 30px;\r\n  grid-template-rows: auto auto;\r\n  gap: 10px;\r\n`\r\n\r\nconst Title = styled.div`\r\n  grid-column: 1 / 2;\r\n`\r\nconst Settings = styled.button`\r\n  width: fit-content;\r\n  grid-column: 2 / 3;\r\n  background: transparent;\r\n  justify-self: flex-end;\r\n`\r\n\r\nconst InfoSection = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 50% 50%;\r\n  align-items: flex-end;\r\n`\r\nconst Subtitles = styled.div``\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { FaCog } from 'react-icons/fa'\r\nimport styled from 'styled-components'\r\nimport Card, { CardSubtitle, CardTitle } from '../../../components/Card'\r\nimport PizzaChart, {\r\n  PizzaValueType,\r\n} from '../../../components/charts/PizzaChart'\r\nimport {\r\n  Subtitle,\r\n  SubtitlesCircle,\r\n  SubtitlesLabel,\r\n} from '../../../components/charts/Subtitles'\r\nimport { screen } from '../../../styles/constants'\r\nimport { ControlPanelContext } from '../ContextProvider'\r\n\r\nconst Inspections: React.FC = () => {\r\n  const { inspections, inspectionsAverageTime } =\r\n    useContext(ControlPanelContext)\r\n\r\n  const [chartData, setchartData] = useState<Array<PizzaValueType>>([])\r\n  const [totalValue] = useState(\r\n    inspections.map((item) => item.value).reduce((acc, prev) => acc + prev, 0)\r\n  )\r\n\r\n  useEffect(() => {\r\n    let data: Array<PizzaValueType> = inspections.map((item) => {\r\n      return {\r\n        label: item.label,\r\n        value: item.value / totalValue,\r\n        color: item.color,\r\n      }\r\n    })\r\n    setchartData(data)\r\n  }, [inspections, totalValue])\r\n\r\n  return (\r\n    <Container>\r\n      <Card>\r\n        <Header>\r\n          <Title>\r\n            <CardTitle>Inspeções</CardTitle>\r\n            <CardSubtitle>Status do dia</CardSubtitle>\r\n          </Title>\r\n          <Settings>\r\n            <FaCog size={20} />\r\n          </Settings>\r\n        </Header>\r\n        <ChartWrapper>\r\n          <PizzaChart arrayData={chartData} chartSize={100} />\r\n        </ChartWrapper>\r\n        <InfoSection>\r\n          <Subtitles>\r\n            {inspections.map((item, i) => (\r\n              <Subtitle key={i}>\r\n                <SubtitlesCircle color={item.color}></SubtitlesCircle>\r\n                <SubtitlesLabel>\r\n                  {item.label} -{' '}\r\n                  {Number((item.value / totalValue) * 100).toFixed(1)}%\r\n                </SubtitlesLabel>\r\n              </Subtitle>\r\n            ))}\r\n          </Subtitles>\r\n          <TimeInfo>\r\n            <CardSubtitle>Média de tempo</CardSubtitle>\r\n            <TimeAverage>\r\n              {inspectionsAverageTime.map((item) => (\r\n                <>\r\n                  <TimeLabel>{item.label}</TimeLabel>\r\n                  <TimeValue>{item.value}</TimeValue>\r\n                </>\r\n              ))}\r\n            </TimeAverage>\r\n          </TimeInfo>\r\n        </InfoSection>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Inspections\r\n\r\nconst Container = styled.div``\r\nconst ChartWrapper = styled.div`\r\n  padding: 10px;\r\n  text-align: center;\r\n`\r\n\r\nconst Header = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto 30px;\r\n  grid-template-rows: auto auto;\r\n  gap: 10px;\r\n`\r\n\r\nconst Title = styled.div`\r\n  grid-column: 1 / 2;\r\n`\r\nconst Settings = styled.button`\r\n  width: fit-content;\r\n  grid-column: 2 / 3;\r\n  background: transparent;\r\n  justify-self: flex-end;\r\n`\r\n\r\nconst InfoSection = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 50% 50%;\r\n  align-items: flex-end;\r\n`\r\nconst Subtitles = styled.div``\r\n\r\nconst TimeInfo = styled.div`\r\n  justify-self: flex-end;\r\n`\r\n\r\nconst TimeAverage = styled.div`\r\n  margin-top: 5px;\r\n  display: grid;\r\n  grid-template-columns: fit-content(200px) auto;\r\n`\r\n\r\nconst TimeLabel = styled(SubtitlesLabel)`\r\n  grid-column: 1;\r\n  padding-right: 10px;\r\n  margin-bottom: 5px;\r\n\r\n  @media (${screen.sm}) {\r\n  }\r\n  @media (${screen.lg}) {\r\n    font-size: 10px;\r\n  }\r\n`\r\nconst TimeValue = styled(SubtitlesLabel)`\r\n  grid-column: 2;\r\n  @media (${screen.lg}) {\r\n    font-size: 10px;\r\n  }\r\n`\r\n","import React, {\r\n  ChangeEvent,\r\n  ChangeEventHandler,\r\n  useContext,\r\n  useState,\r\n} from 'react'\r\nimport styled from 'styled-components'\r\nimport Card, { CardTitle } from '../../../components/Card'\r\nimport Select from '../../../components/Select'\r\nimport { colors, screen } from '../../../styles/constants'\r\nimport { ControlPanelContext } from '../ContextProvider'\r\n\r\nconst ScheduledInspections: React.FC = () => {\r\n  const { scheduledInspections } = useContext(ControlPanelContext)\r\n\r\n  const [searchText, setsearchText] = useState('')\r\n\r\n  const seacrhIn = (...args: string[]) => {\r\n    if (args.length <= 0) return\r\n    let text = args.shift() || ''\r\n    let result = false\r\n    args.forEach((arg: string) => {\r\n      if (arg.toLowerCase().indexOf(text.toLowerCase()) >= 0) result = true\r\n    })\r\n    return result\r\n  }\r\n\r\n  const handleSearch: ChangeEventHandler = (\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setsearchText(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Card>\r\n        <Header>\r\n          <Title>\r\n            <CardTitle>Inspeções agendadas</CardTitle>\r\n          </Title>\r\n\r\n          <Select options={[{ label: 'Diário' }]} />\r\n        </Header>\r\n        <Search\r\n          placeholder='Pesquisar'\r\n          style={{ marginBottom: 10 }}\r\n          onChange={handleSearch}\r\n        />\r\n        <TableWrapper>\r\n          <InspectionTable>\r\n            <thead>\r\n              <tr>\r\n                <th>NOME</th>\r\n                <th>PLANEJADO</th>\r\n                <th>REALIZADO</th>\r\n                <th>ÚLTIMA ATUALIZAÇÃO</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {scheduledInspections\r\n                .filter((item) =>\r\n                  seacrhIn(\r\n                    searchText,\r\n                    item.name,\r\n                    item.planned + '',\r\n                    item.completed + ''\r\n                  )\r\n                )\r\n                .map((item, i) => (\r\n                  <Inspection key={i}>\r\n                    <td>{item.name}</td>\r\n                    <td>{item.planned}</td>\r\n                    <td>{item.completed}</td>\r\n                    <td>{item.lastUpdate}</td>\r\n                  </Inspection>\r\n                ))}\r\n            </tbody>\r\n          </InspectionTable>\r\n        </TableWrapper>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ScheduledInspections\r\n\r\nconst Container = styled.div``\r\n\r\nconst Header = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n  grid-template-rows: auto auto;\r\n  gap: 10px;\r\n\r\n  @media (${screen.md}) {\r\n  }\r\n`\r\n\r\nconst Title = styled.div`\r\n  grid-column: 1 / 2;\r\n`\r\nconst Search = styled.input`\r\n  border-radius: 100px;\r\n  border: 1px solid ${colors.gray};\r\n  width: 100%;\r\n  padding: 5px 10px;\r\n`\r\n\r\nconst TableWrapper = styled.div`\r\n  width: fit-content(100%);\r\n  overflow-x: auto;\r\n  padding-bottom: 10px;\r\n`\r\n\r\nconst InspectionTable = styled.table`\r\n  width: 100%;\r\n  margin-top: 10px;\r\n  font-size: 12px;\r\n  td,\r\n  th {\r\n    white-space: nowrap;\r\n    text-align: left;\r\n    padding: 2px;\r\n    padding-right: 20px;\r\n  }\r\n  th {\r\n    font-size: 10px;\r\n    padding-bottom: 10px;\r\n  }\r\n`\r\n\r\nconst Inspection = styled.tr`\r\n  border-bottom: 1px solid ${colors.gray};\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { screen } from '../../styles/constants'\r\nimport { Page } from '../../styles/global'\r\nimport ActionPlanns from './components/ActionPlanns'\r\nimport ActionPlannsUpdate from './components/ActionPlannsUpdate'\r\nimport EventHistory from './components/EventHistory'\r\nimport GeneralActionPlanns from './components/GeneralActionPlanns'\r\nimport Inspections from './components/Inspections'\r\nimport ScheduledInspections from './components/ScheduledInspections'\r\n\r\nexport default function ControlPanel(): JSX.Element {\r\n  return (\r\n    <Container>\r\n      <Title>Painel de Controle</Title>\r\n      <EventHistoryWrapper>\r\n        <EventHistory />\r\n      </EventHistoryWrapper>\r\n\r\n      <GeneralActionsWrapper>\r\n        <GeneralActionPlanns />\r\n      </GeneralActionsWrapper>\r\n\r\n      <InspectionsWrapper>\r\n        <Inspections />\r\n      </InspectionsWrapper>\r\n\r\n      <ActionPlannsWrapper>\r\n        <ActionPlanns />\r\n      </ActionPlannsWrapper>\r\n\r\n      <ActionPlannsUpdateWrapper>\r\n        <ActionPlannsUpdate />\r\n      </ActionPlannsUpdateWrapper>\r\n\r\n      <ScheduledInspectionsWrapper>\r\n        <ScheduledInspections />\r\n      </ScheduledInspectionsWrapper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled(Page)`\r\n  width: 100%;\r\n  padding: 20px;\r\n  display: grid;\r\n  grid-template-rows: 50px repeat(auto-fit, fit-content(300px));\r\n  grid-template-columns: 100%;\r\n  gap: 10px;\r\n\r\n  @media (${screen.md}) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n  @media (${screen.lg}) {\r\n    align-items: stretch;\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n`\r\n\r\nconst Title = styled.h1`\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n`\r\nconst EventHistoryWrapper = styled.div`\r\n  @media (${screen.md}) {\r\n    grid-column: 1 / 3;\r\n  }\r\n`\r\n\r\nconst GeneralActionsWrapper = styled.div`\r\n  @media (${screen.md}) {\r\n    grid-column: 1 / 3;\r\n  }\r\n\r\n  @media (${screen.lg}) {\r\n    grid-column: 3 / 4;\r\n    grid-row: 2;\r\n  }\r\n`\r\nconst InspectionsWrapper = styled.div`\r\n  @media (${screen.md}) {\r\n    grid-column: 1 / 2;\r\n  }\r\n  @media (${screen.lg}) {\r\n    grid-row: 3;\r\n  }\r\n`\r\nconst ActionPlannsWrapper = styled.div`\r\n  @media (${screen.md}) {\r\n    grid-column: 2 / 3;\r\n    grid-row: 4;\r\n  }\r\n  @media (${screen.lg}) {\r\n    grid-row: 3;\r\n  }\r\n`\r\n\r\nconst ActionPlannsUpdateWrapper = styled.div`\r\n  @media (${screen.md}) {\r\n    grid-column: 1 / 3;\r\n    grid-row: 5;\r\n  }\r\n  @media (${screen.lg}) {\r\n    grid-column: 3 / 4;\r\n    grid-row: 3 / 5;\r\n  }\r\n`\r\n\r\nconst ScheduledInspectionsWrapper = styled.div`\r\n  @media (${screen.md}) {\r\n    grid-column: 1 / 3;\r\n    grid-row: 6;\r\n  }\r\n  @media (${screen.lg}) {\r\n    grid-column: 1 / 3;\r\n    grid-row: 4 / 5;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport View from './View'\r\nimport ContextProvider from './ContextProvider'\r\n\r\nexport default function ControlPanel(): JSX.Element {\r\n  return (\r\n    <ContextProvider>\r\n      <View />\r\n    </ContextProvider>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\nimport Sidebar, { SidebarItemProps } from './components/Sidebar'\nimport ControlPanel from './features/ControlPanel/Index'\nimport GlobalStyles from './styles/global'\nimport styled from 'styled-components'\nimport { BiBarChartSquare } from 'react-icons/bi'\nimport { screen } from './styles/constants'\n\nfunction App() {\n  const menuOptions: Array<SidebarItemProps> = [\n    {\n      label: 'Painel de controle',\n      path: '',\n      icon: BiBarChartSquare,\n    },\n  ]\n\n  const [sidebarActive, setsidebarActive] = useState(false)\n\n  return (\n    <AppContainer sidebarActive={sidebarActive}>\n      <Sidebar\n        options={menuOptions}\n        active={sidebarActive}\n        setActive={setsidebarActive}\n      />\n      <ControlPanel />\n      <GlobalStyles />\n    </AppContainer>\n  )\n}\n\nexport default App\n\nconst AppContainer = styled('div')<{ sidebarActive: boolean }>`\n  width: 100%;\n  padding-top: 50px;\n\n  @media (${screen.md}) {\n    padding: 0;\n    padding-left: ${(props) => (props.sidebarActive ? '290px' : '40px')};\n  }\n`\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}